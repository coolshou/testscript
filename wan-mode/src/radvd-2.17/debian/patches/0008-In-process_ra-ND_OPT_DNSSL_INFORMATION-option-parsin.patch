From 9dfaaaf740ce784541e76e68de4ae04dce2c0921 Mon Sep 17 00:00:00 2001
From: Vasiliy Kulikov <segoon@openwall.com>
Date: Tue, 4 Oct 2011 00:31:15 -0700
Subject: [PATCH] In process_ra() ND_OPT_DNSSL_INFORMATION option parsing
 "label_len" is not checked for negativeness;  it leads to
 "suffix" buffer overflow, which leads to privilege
 escalation (at least with -fno-stack-protector, I didn't
 discover whether it's possible with -fstack-protector).

---
 process.c |   11 +++++++++--
 1 files changed, 9 insertions(+), 2 deletions(-)

diff --git a/process.c b/process.c
index 302bb4f..3307daa 100644
--- a/process.c
+++ b/process.c
@@ -280,7 +280,7 @@ process_ra(struct Interface *iface, unsigned char *msg, int len,
 		char prefix_str[INET6_ADDRSTRLEN];
 		char rdnss_str[INET6_ADDRSTRLEN];
 		char suffix[256];
-		int offset, label_len;
+		unsigned int offset, label_len;
 		uint32_t preferred, valid, count;
 
 		if (len < 2)
@@ -434,7 +434,14 @@ process_ra(struct Interface *iface, unsigned char *msg, int len,
 					continue;
 				}
 
-				if ((sizeof(suffix) - strlen(suffix)) < (label_len + 2)) {
+				/*
+				 * 1) must not overflow int: label + 2, offset + label_len
+				 * 2) last byte of dnssli_suffix must not overflow opt_str + len
+				 */
+				if ((sizeof(suffix) - strlen(suffix)) < (label_len + 2) ||
+				    label_len > label_len + 2 ||
+				    &dnsslinfo->nd_opt_dnssli_suffixes[offset+label_len] - (char*)opt_str >= len ||
+				    offset + label_len < offset) {
 					flog(LOG_ERR, "oversized suffix in DNSSL option on %s from %s",
 							iface->Name, addr_str);
 					break;
-- 
1.7.7

